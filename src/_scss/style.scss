:root {
  --space-color: hsl(217, 42%, 7%);
  --star-color: white;

  --stars-sm-speed: 5s;
  --stars-md-speed: 2s;
  --stars-lg-speed: 1s;
}

@function constellation($amount) {
  $value: (random(200) * 1vw) (random(200) * 1vh) var(--star-color);

  @for $i from 2 through $amount {
    $value: #{$value}, (random(200) * 1vw) (random(200) * 1vh) var(--star-color);
  }

  @return $value;
}

// Globals
* {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  overflow: hidden;
}

body {
  display: flex;
  position: relative;
  overflow: hidden;
  background-color: var(--space-color);
}

.ship,
.star-field {
  position: absolute;
  top: 50%;
  left: 50%;
  will-change: transform;
  transition: transform 0.4s ease;
  transform: translate(-50%, -50%);
}

.star-field {
  width: 200%;
  height: 200%;
  transition: transform 1s ease-out;
}

#rocket-icon {
  width: 100px;
  transform: rotate(-90deg);
}

.flame {
  transform-origin: 15px 37.5px;
}

// rocket direction
.direction {
  $areas: 20;
  $split: calc($areas / 2);

  flex-grow: 1;
  z-index: 3;

  @for $i from 1 through $areas {
    &:nth-child(#{$i}):hover {
      @if $i <= $split {
        & ~ .ship,
        & ~ .star-field {
          transform: translate(-50%, -50%) rotate(-90deg + (($i - 1) * 10));
        }
      } @else if $i > $split {
        & ~ .ship,
        & ~ .star-field {
          transform: translate(-50%, -50%)
            rotate(0deg + (($i - ($split + 1)) * 10));
        }
      }
    }
  }

  &:active,
  &:focus {
    ~ .star-field {
      .stars-sm {
        &:before,
        &:after {
          animation-duration: calc(var(--stars-sm-speed) / 2);
        }
        &:after {
          animation-delay: calc(var(--stars-sm-speed) / -4);
        }
      }
      .stars-md {
        &:before,
        &:after {
          animation-duration: calc(var(--stars-md-speed) / 2);
        }
        &:after {
          animation-delay: calc(var(--stars-md-speed) / -4);
        }
      }
      .stars-lg {
        &:before,
        &:after {
          animation-duration: calc(var(--stars-lg-speed) / 2);
        }
        &:after {
          animation-delay: calc(var(--stars-lg-speed) / -4);
        }
      }
    }

    ~ .ship {
      .wrapper {
        animation: speed-up-ship 80ms linear infinite alternate;
      }
      .exhaust {
        animation: speed-up-exhaust 80ms linear infinite alternate;
      }
    }
  }
}

// Ship
.ship .wrapper {
  display: flex;
}

// Stars
.stars {
  position: absolute;
  top: 0;
  left: 0;

  &:before,
  &:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    animation: stars linear infinite;
    transform: translateY(-100vh);
  }

  &-sm {
    width: 1px;
    height: 1px;

    &:before,
    &:after {
      box-shadow: constellation(500);
      animation-duration: var(--stars-sm-speed);
    }

    &:after {
      animation-delay: calc(var(--stars-sm-speed) / -2);
    }
  }

  &-md {
    width: 2px;
    height: 2px;

    &:before,
    &:after {
      box-shadow: constellation(200);
      animation-duration: var(--stars-md-speed);
    }

    &:after {
      animation-delay: calc(var(--stars-md-speed) / -2);
    }
  }

  &-lg {
    width: 4px;
    height: 4px;

    &:before,
    &:after {
      box-shadow: constellation(50);
      animation-duration: var(--stars-lg-speed);
    }

    &:after {
      animation-delay: calc(var(--stars-lg-speed) / -2);
    }
  }
}

// Animations
@keyframes stars {
  0% {
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateY(0);
  }
}

@keyframes exhaust {
  to {
    transform: scaleX(0.98) translateY(-1vmin);
  }
}

@keyframes speed-up-exhaust {
  from {
    transform: scale(0.98, 1);
  }
  to {
    transform: scale(0.96, 1.5);
  }
}

@keyframes speed-up-ship {
  from {
    transform: translateY(-5%);
  }
  to {
    transform: translateY(-3%);
  }
}
